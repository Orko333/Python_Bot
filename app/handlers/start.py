from aiogram import types, Router
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.db import add_referral, get_referrals

router = Router()

ORDER_TYPES = [
    ("–ö—É—Ä—Å–æ–≤–∞ —Ä–æ–±–æ—Ç–∞", "coursework"),
    ("–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ —Ä–æ–±–æ—Ç–∞", "labwork"),
    ("–†–µ—Ñ–µ—Ä–∞—Ç", "essay"),
    ("–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞ —Ä–æ–±–æ—Ç–∞", "testwork"),
    ("–Ü–Ω—à–µ", "other")
]

@router.message(Command("start"))
async def start_handler(message: types.Message):
    args = message.text.split()
    if len(args) > 1 and args[1].startswith("ref"):
        try:
            ref_id = int(args[1][3:])
            if ref_id != message.from_user.id:
                add_referral(ref_id, message.from_user.id)
        except Exception:
            pass
    text = (
        "üëã <b>–í—ñ—Ç–∞—é —É –±–æ—Ç—ñ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫–∏—Ö —Ä–æ–±—ñ—Ç!</b>\n\n"
        "–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à —à–≤–∏–¥–∫–æ —Ç–∞ –∑—Ä—É—á–Ω–æ –∑–∞–º–æ–≤–∏—Ç–∏ –∫—É—Ä—Å–æ–≤—É, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É, —Ä–µ—Ñ–µ—Ä–∞—Ç —á–∏ —ñ–Ω—à—É —Ä–æ–±–æ—Ç—É.\n\n"
        "<b>–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?</b>\n"
        "1Ô∏è‚É£ –ù–∞—Ç–∏—Å–Ω–∏ /order –∞–±–æ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ\n"
        "2Ô∏è‚É£ –û–±–µ—Ä–∏ —Ç–∏–ø —Ä–æ–±–æ—Ç–∏\n"
        "3Ô∏è‚É£ –ó–∞–ø–æ–≤–Ω–∏ –∫–æ—Ä–æ—Ç–∫—É —Ñ–æ—Ä–º—É\n"
        "4Ô∏è‚É£ –û—Ç—Ä–∏–º–∞–π –æ—Ä—ñ—î–Ω—Ç–æ–≤–Ω—É —Ü—ñ–Ω—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n\n"
        "–ü—ñ—Å–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑ —Ç–æ–±–æ—é –∑–≤'—è–∂–µ—Ç—å—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä.\n"
        "–Ø–∫—â–æ —î –ø–∏—Ç–∞–Ω–Ω—è ‚Äî —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Å—è –∫–æ–º–∞–Ω–¥–æ—é /help."
    )
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="order_type:coursework")]
        ]
    )
    await message.answer(text, parse_mode="HTML", reply_markup=keyboard)

@router.message(Command("order"))
async def order_handler(message: types.Message):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=name, callback_data=f"order_type:{code}")]
            for name, code in ORDER_TYPES
        ]
    )
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ä–æ–±–æ—Ç–∏:", reply_markup=keyboard)

@router.message(Command("privacy"))
async def privacy_handler(message: types.Message):
    text = (
        "<b>–ü–æ–ª—ñ—Ç–∏–∫–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ</b>\n\n"
        "–ú–∏ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–∏—à–µ —Ç—ñ –¥–∞–Ω—ñ, —è–∫—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –≤–∞—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: —ñ–º'—è, username, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –¥–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n"
        "–î–∞–Ω—ñ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è —Ç—Ä–µ—Ç—ñ–º –æ—Å–æ–±–∞–º, –æ–∫—Ä—ñ–º –≤–∏–ø–∞–¥–∫—ñ–≤, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –∑–∞–∫–æ–Ω–æ–º.\n"
        "–í–∏ –º–æ–∂–µ—Ç–µ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å–≤–æ—ó—Ö –¥–∞–Ω–∏—Ö.\n"
        "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ü—å–æ–≥–æ –±–æ—Ç–∞, –≤–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ —Ü—ñ—î—é –ø–æ–ª—ñ—Ç–∏–∫–æ—é."
    )
    await message.answer(text, parse_mode="HTML")

@router.message(Command("disclaimer"))
async def disclaimer_handler(message: types.Message):
    text = (
        "<b>–í—ñ–¥–º–æ–≤–∞ –≤—ñ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ</b>\n\n"
        "–ë–æ—Ç —î –ª–∏—à–µ –ø–æ—Å–µ—Ä–µ–¥–Ω–∏–∫–æ–º –º—ñ–∂ –∑–∞–º–æ–≤–Ω–∏–∫–æ–º —ñ –≤–∏–∫–æ–Ω–∞–≤—Ü–µ–º.\n"
        "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ —è–∫—ñ—Å—Ç—å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ä–æ–±—ñ—Ç, —Å—Ç—Ä–æ–∫–∏ —Ç–∞ —ñ–Ω—à—ñ –∑–æ–±–æ–≤'—è–∑–∞–Ω–Ω—è, —è–∫—â–æ —ñ–Ω—à–µ –Ω–µ –æ–±—É–º–æ–≤–ª–µ–Ω–æ –æ–∫—Ä–µ–º–æ.\n"
        "–í—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏—Ä—ñ—à—É—é—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."
    )
    await message.answer(text, parse_mode="HTML")

@router.message(Command("myref"))
async def myref_handler(message: types.Message):
    user_id = message.from_user.id
    ref_link = f"https://t.me/{(await message.bot.me()).username}?start=ref{user_id}"
    referrals = get_referrals(user_id)
    text = (
        f"<b>–¢–≤–æ—î —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:</b>\n{ref_link}\n\n"
        f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: <b>{len(referrals)}</b>"
    )
    await message.answer(text, parse_mode="HTML") 