from aiogram import types, Router, Bot
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, BotCommand
from .start import ORDER_TYPES # Assuming ORDER_TYPES is in start.py
from magic_filter import F

router = Router()

async def setup_bot_commands(bot: Bot):
    commands = [
        BotCommand(command="start", description="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"),
        BotCommand(command="order", description="–ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"),
        BotCommand(command="cabinet", description="–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"),
        BotCommand(command="faq", description="–ß–∞—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è"),
        BotCommand(command="prices", description="–ü—Ä–∞–π—Å-–ª–∏—Å—Ç"),
        BotCommand(command="feedback", description="–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫"),
        BotCommand(command="support", description="–ó–≤'—è–∑–æ–∫ –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"),
        BotCommand(command="help", description="–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")
    ]
    await bot.set_my_commands(commands)

@router.message(Command("order"))
async def order_handler(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    try:
        await state.clear()
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text=name, callback_data=f"order_type:{code}")]
                for name, code in ORDER_TYPES
            ]
        )
        await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ä–æ–±–æ—Ç–∏:", reply_markup=keyboard)
        print(f"[INFO] /order: user {user_id} - order menu sent")
    except Exception as e:
        print(f"[ERROR] /order: user {user_id} - {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.")

@router.message(F.text == "üìù –ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
async def order_button_handler(message: types.Message, state: FSMContext):
    from app.handlers.order import order_handler
    await order_handler(message, state)

@router.message(F.text == "üë§ –ú—ñ–π –∫–∞–±—ñ–Ω–µ—Ç")
async def cabinet_button_handler(message: types.Message, state: FSMContext):
    from app.handlers.cabinet import cabinet_handler
    await cabinet_handler(message, state) 